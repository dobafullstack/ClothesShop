{"ast":null,"code":"import * as actionTypes from \"../constants/cart.constant\";\nimport { toast } from \"react-toastify\";\nexport const addToCart = item => async (dispatch, getState) => {\n  const cart = getState().cart.products;\n\n  if (cart.length !== 0) {\n    //cart is not null\n    const index = cart.findIndex(product => product.product._id === item._id);\n\n    if (index >= 0) {\n      //item exist in cart\n      dispatch({\n        type: actionTypes.UPDATE_CART,\n        payload: {\n          product: item,\n          count: 1\n        }\n      });\n    } else {\n      //item is not exist in cart\n      dispatch({\n        type: actionTypes.ADD_TO_CART,\n        payload: {\n          product: item,\n          totalPrice: item.price\n        }\n      });\n    }\n  } else {\n    dispatch({\n      type: actionTypes.ADD_TO_CART,\n      payload: {\n        product: item,\n        totalPrice: item.price\n      }\n    });\n  }\n\n  toast.success(\"Đã thêm vào giỏ hàng\");\n};\nexport const updateCart = (count, item) => async (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.UPDATE_CART,\n    payload: {\n      count: count,\n      product: item\n    }\n  });\n\n  if (count > 0) {\n    toast.info(\"Đã tăng một sản phẩm!\");\n  } else {\n    toast.error(\"Đã giảm một sản phẩm!\");\n  }\n};\nexport const removeCart = item => async (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.REMOVE_FROM_CART,\n    payload: {}\n  });\n};","map":{"version":3,"sources":["E:/Web/ReactJS/ClothesShop/frontend/src/redux/actions/cart.action.js"],"names":["actionTypes","toast","addToCart","item","dispatch","getState","cart","products","length","index","findIndex","product","_id","type","UPDATE_CART","payload","count","ADD_TO_CART","totalPrice","price","success","updateCart","info","error","removeCart","REMOVE_FROM_CART"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC7D,QAAMC,IAAI,GAAGD,QAAQ,GAAGC,IAAX,CAAgBC,QAA7B;;AAEA,MAAID,IAAI,CAACE,MAAL,KAAgB,CAApB,EAAuB;AACnB;AACA,UAAMC,KAAK,GAAGH,IAAI,CAACI,SAAL,CACTC,OAAD,IAAaA,OAAO,CAACA,OAAR,CAAgBC,GAAhB,KAAwBT,IAAI,CAACS,GADhC,CAAd;;AAGA,QAAIH,KAAK,IAAI,CAAb,EAAgB;AACZ;AACAL,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAEb,WAAW,CAACc,WADb;AAELC,QAAAA,OAAO,EAAE;AACLJ,UAAAA,OAAO,EAAER,IADJ;AAELa,UAAAA,KAAK,EAAE;AAFF;AAFJ,OAAD,CAAR;AAOH,KATD,MASO;AACH;AACAZ,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAEb,WAAW,CAACiB,WADb;AAELF,QAAAA,OAAO,EAAE;AACLJ,UAAAA,OAAO,EAAER,IADJ;AAELe,UAAAA,UAAU,EAAEf,IAAI,CAACgB;AAFZ;AAFJ,OAAD,CAAR;AAOH;AACJ,GAxBD,MAwBO;AACHf,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEb,WAAW,CAACiB,WADb;AAELF,MAAAA,OAAO,EAAE;AACLJ,QAAAA,OAAO,EAAER,IADJ;AAELe,QAAAA,UAAU,EAAEf,IAAI,CAACgB;AAFZ;AAFJ,KAAD,CAAR;AAOH;;AAEDlB,EAAAA,KAAK,CAACmB,OAAN,CAAc,sBAAd;AACH,CAtCM;AAwCP,OAAO,MAAMC,UAAU,GAAG,CAACL,KAAD,EAAQb,IAAR,KAAiB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACrED,EAAAA,QAAQ,CAAC;AACLS,IAAAA,IAAI,EAAEb,WAAW,CAACc,WADb;AAELC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAEA,KADF;AAELL,MAAAA,OAAO,EAAER;AAFJ;AAFJ,GAAD,CAAR;;AAQA,MAAIa,KAAK,GAAG,CAAZ,EAAe;AACXf,IAAAA,KAAK,CAACqB,IAAN,CAAW,uBAAX;AACH,GAFD,MAEO;AACHrB,IAAAA,KAAK,CAACsB,KAAN,CAAY,uBAAZ;AACH;AACJ,CAdM;AAgBP,OAAO,MAAMC,UAAU,GAAIrB,IAAD,IAAU,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9DD,EAAAA,QAAQ,CAAC;AACLS,IAAAA,IAAI,EAAEb,WAAW,CAACyB,gBADb;AAELV,IAAAA,OAAO,EAAE;AAFJ,GAAD,CAAR;AAMH,CAPM","sourcesContent":["import * as actionTypes from \"../constants/cart.constant\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const addToCart = (item) => async (dispatch, getState) => {\r\n    const cart = getState().cart.products;\r\n\r\n    if (cart.length !== 0) {\r\n        //cart is not null\r\n        const index = cart.findIndex(\r\n            (product) => product.product._id === item._id\r\n        );\r\n        if (index >= 0) {\r\n            //item exist in cart\r\n            dispatch({\r\n                type: actionTypes.UPDATE_CART,\r\n                payload: {\r\n                    product: item,\r\n                    count: 1,\r\n                },\r\n            });\r\n        } else {\r\n            //item is not exist in cart\r\n            dispatch({\r\n                type: actionTypes.ADD_TO_CART,\r\n                payload: {\r\n                    product: item,\r\n                    totalPrice: item.price,\r\n                },\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: actionTypes.ADD_TO_CART,\r\n            payload: {\r\n                product: item,\r\n                totalPrice: item.price,\r\n            },\r\n        });\r\n    }\r\n\r\n    toast.success(\"Đã thêm vào giỏ hàng\");\r\n};\r\n\r\nexport const updateCart = (count, item) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.UPDATE_CART,\r\n        payload: {\r\n            count: count,\r\n            product: item,\r\n        },\r\n    });\r\n\r\n    if (count > 0) {\r\n        toast.info(\"Đã tăng một sản phẩm!\");\r\n    } else {\r\n        toast.error(\"Đã giảm một sản phẩm!\");\r\n    }\r\n};\r\n\r\nexport const removeCart = (item) => async (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.REMOVE_FROM_CART,\r\n        payload: {\r\n            \r\n        }\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}