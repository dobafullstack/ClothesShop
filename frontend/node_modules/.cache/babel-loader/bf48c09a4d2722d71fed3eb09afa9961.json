{"ast":null,"code":"import * as actionTypes from \"../constants/cart.constant\";\nconst initialState = {\n  products: [],\n  totalPrice: 0\n};\nexport const cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      return { ...state,\n        products: [...state.products, action.payload.product],\n        totalPrice: state.totalPrice + action.payload.totalPrice\n      };\n\n    case actionTypes.UPDATE_CART:\n      const products = state.products;\n      const index = products.findIndex(item => item._id === action.payload.product._id);\n      products[index];\n      return { ...state,\n        products: [...state.products]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["E:/Web/ReactJS/ClothesShop/frontend/src/redux/reducers/cart.reducer.js"],"names":["actionTypes","initialState","products","totalPrice","cartReducer","state","action","type","ADD_TO_CART","payload","product","UPDATE_CART","index","findIndex","item","_id"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;AAKA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,WAAW,CAACQ,WAAjB;AACI,aAAM,EACF,GAAGH,KADD;AAEFH,QAAAA,QAAQ,EAAE,CACN,GAAGG,KAAK,CAACH,QADH,EAENI,MAAM,CAACG,OAAP,CAAeC,OAFT,CAFR;AAMFP,QAAAA,UAAU,EAAEE,KAAK,CAACF,UAAN,GAAmBG,MAAM,CAACG,OAAP,CAAeN;AAN5C,OAAN;;AAQJ,SAAKH,WAAW,CAACW,WAAjB;AACI,YAAMT,QAAQ,GAAGG,KAAK,CAACH,QAAvB;AACA,YAAMU,KAAK,GAAGV,QAAQ,CAACW,SAAT,CAAmBC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaT,MAAM,CAACG,OAAP,CAAeC,OAAf,CAAuBK,GAA/D,CAAd;AAEAb,MAAAA,QAAQ,CAACU,KAAD,CAAR;AAEA,aAAM,EACF,GAAGP,KADD;AAEFH,QAAAA,QAAQ,EAAE,CACN,GAAGG,KAAK,CAACH,QADH;AAFR,OAAN;;AAOJ;AACI,aAAOG,KAAP;AAxBR;AA0BH,CA3BM","sourcesContent":["import * as actionTypes from \"../constants/cart.constant\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    totalPrice: 0,\r\n};\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            return{\r\n                ...state,\r\n                products: [\r\n                    ...state.products,\r\n                    action.payload.product\r\n                ],\r\n                totalPrice: state.totalPrice + action.payload.totalPrice\r\n            }\r\n        case actionTypes.UPDATE_CART:\r\n            const products = state.products\r\n            const index = products.findIndex(item => item._id === action.payload.product._id);\r\n\r\n            products[index]\r\n\r\n            return{\r\n                ...state,\r\n                products: [\r\n                    ...state.products\r\n                ]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}