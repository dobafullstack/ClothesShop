{"ast":null,"code":"import * as actionTypes from \"../constants/auth.constant\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nexport const login = (username, password) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/auth/login\", {\n      username,\n      password\n    });\n    const user = jwt_decode(data.accessToken);\n    dispatch({\n      type: actionTypes.LOGIN_REQUIRED\n    });\n    setTimeout(function () {\n      dispatch({\n        type: actionTypes.LOGIN_SUCCESS,\n        payload: {\n          accessToken: data.accessToken,\n          isLogin: true,\n          user: user.customer\n        }\n      });\n    });\n    localStorage.setItem(\"accessToken\", JSON.stringify(getState().auth.accessToken));\n    localStorage.setItem(\"user\", JSON.stringify(getState().auth.user));\n  } catch (e) {\n    dispatch({\n      type: actionTypes.LOGIN_FAIL,\n      payload: {\n        message: e.response.data.message,\n        isLogin: false\n      }\n    });\n    toast.error(e.response.data.message);\n  }\n\n  return JSON.stringify(getState().auth.accessToken);\n};\nexport const logout = () => (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.LOGOUT,\n    payload: {\n      isLogin: false,\n      accessToken: \"\",\n      user: {}\n    }\n  });\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('user');\n};","map":{"version":3,"sources":["E:/Web/ReactJS/ClothesShop/frontend/src/redux/actions/auth.action.js"],"names":["actionTypes","axios","jwt_decode","toast","login","username","password","dispatch","getState","data","post","user","accessToken","type","LOGIN_REQUIRED","setTimeout","LOGIN_SUCCESS","payload","isLogin","customer","localStorage","setItem","JSON","stringify","auth","e","LOGIN_FAIL","message","response","error","logout","LOGOUT","removeItem"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CAAW,aAAX,EAA0B;AAC7CL,MAAAA,QAD6C;AAE7CC,MAAAA;AAF6C,KAA1B,CAAvB;AAKA,UAAMK,IAAI,GAAGT,UAAU,CAACO,IAAI,CAACG,WAAN,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEb,WAAW,CAACc;AADb,KAAD,CAAR;AAIAC,IAAAA,UAAU,CAAC,YAAU;AACjBR,MAAAA,QAAQ,CAAC;AACLM,QAAAA,IAAI,EAAEb,WAAW,CAACgB,aADb;AAELC,QAAAA,OAAO,EAAE;AACLL,UAAAA,WAAW,EAAEH,IAAI,CAACG,WADb;AAELM,UAAAA,OAAO,EAAE,IAFJ;AAGLP,UAAAA,IAAI,EAAEA,IAAI,CAACQ;AAHN;AAFJ,OAAD,CAAR;AAQH,KATS,CAAV;AAWAC,IAAAA,YAAY,CAACC,OAAb,CACI,aADJ,EAEIC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBZ,WAA/B,CAFJ;AAKAQ,IAAAA,YAAY,CAACC,OAAb,CACI,MADJ,EAEIC,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBb,IAA/B,CAFJ;AAIH,GAhCD,CAgCE,OAAOc,CAAP,EAAU;AACRlB,IAAAA,QAAQ,CAAC;AACLM,MAAAA,IAAI,EAAEb,WAAW,CAAC0B,UADb;AAELT,MAAAA,OAAO,EAAE;AACLU,QAAAA,OAAO,EAAEF,CAAC,CAACG,QAAF,CAAWnB,IAAX,CAAgBkB,OADpB;AAELT,QAAAA,OAAO,EAAE;AAFJ;AAFJ,KAAD,CAAR;AAOAf,IAAAA,KAAK,CAAC0B,KAAN,CAAYJ,CAAC,CAACG,QAAF,CAAWnB,IAAX,CAAgBkB,OAA5B;AACH;;AAED,SAAOL,IAAI,CAACC,SAAL,CAAef,QAAQ,GAAGgB,IAAX,CAAgBZ,WAA/B,CAAP;AACH,CA7CM;AA+CP,OAAO,MAAMkB,MAAM,GAAG,MAAM,CAACvB,QAAD,EAAWC,QAAX,KAAwB;AAChDD,EAAAA,QAAQ,CAAC;AACLM,IAAAA,IAAI,EAAEb,WAAW,CAAC+B,MADb;AAELd,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELN,MAAAA,WAAW,EAAE,EAFR;AAGLD,MAAAA,IAAI,EAAE;AAHD;AAFJ,GAAD,CAAR;AASAS,EAAAA,YAAY,CAACY,UAAb,CAAwB,aAAxB;AACAZ,EAAAA,YAAY,CAACY,UAAb,CAAwB,MAAxB;AACH,CAZM","sourcesContent":["import * as actionTypes from \"../constants/auth.constant\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const login = (username, password) => async (dispatch, getState) => {\r\n    try {\r\n        const { data } = await axios.post(\"/auth/login\", {\r\n            username,\r\n            password,\r\n        });\r\n\r\n        const user = jwt_decode(data.accessToken)\r\n\r\n        dispatch({\r\n            type: actionTypes.LOGIN_REQUIRED,\r\n        });\r\n\r\n        setTimeout(function(){\r\n            dispatch({\r\n                type: actionTypes.LOGIN_SUCCESS,\r\n                payload: {\r\n                    accessToken: data.accessToken,\r\n                    isLogin: true,\r\n                    user: user.customer,\r\n                },\r\n            });\r\n        })\r\n\r\n        localStorage.setItem(\r\n            \"accessToken\",\r\n            JSON.stringify(getState().auth.accessToken)\r\n        );\r\n\r\n        localStorage.setItem(\r\n            \"user\",\r\n            JSON.stringify(getState().auth.user)\r\n        );\r\n    } catch (e) {\r\n        dispatch({\r\n            type: actionTypes.LOGIN_FAIL,\r\n            payload: {\r\n                message: e.response.data.message,\r\n                isLogin: false\r\n            },\r\n        });\r\n        toast.error(e.response.data.message);\r\n    }\r\n\r\n    return JSON.stringify(getState().auth.accessToken);\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.LOGOUT,\r\n        payload: {\r\n            isLogin: false,\r\n            accessToken: \"\",\r\n            user: {}\r\n        }\r\n    });\r\n\r\n    localStorage.removeItem('accessToken')\r\n    localStorage.removeItem('user')\r\n}\r\n"]},"metadata":{},"sourceType":"module"}