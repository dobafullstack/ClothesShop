{"ast":null,"code":"import * as actionTypes from \"../constants/auth.constant\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nexport const login = (username, password) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/auth/login\", {\n      username,\n      password\n    });\n    const user = jwt_decode(data.accessToken);\n    console.log(user);\n    dispatch({\n      type: actionTypes.LOGIN_REQUIRED\n    });\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: {\n        accessToken: data.accessToken,\n        isLogin: true,\n        user: user.customer\n      }\n    });\n    localStorage.setItem(\"accessToken\", JSON.stringify(getState().auth.accessToken));\n  } catch (e) {\n    dispatch({\n      type: actionTypes.LOGIN_FAIL,\n      payload: {\n        message: e.response.data.message,\n        isLogin: false\n      }\n    });\n    toast.error(e.response.data.message);\n  }\n\n  return JSON.stringify(getState().auth.accessToken);\n};\nexport const logout = () => (dispatch, getState) => {\n  dispatch({\n    type: actionTypes.LOGOUT,\n    payload: {\n      isLogin: false,\n      accessToken: \"\"\n    }\n  });\n  localStorage.setItem('accessToken', \"\");\n};","map":{"version":3,"sources":["E:/Web/ReactJS/ClothesShop/frontend/src/redux/actions/auth.action.js"],"names":["actionTypes","axios","jwt_decode","toast","login","username","password","dispatch","getState","data","post","user","accessToken","console","log","type","LOGIN_REQUIRED","LOGIN_SUCCESS","payload","isLogin","customer","localStorage","setItem","JSON","stringify","auth","e","LOGIN_FAIL","message","response","error","logout","LOGOUT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,IAAN,CAAW,aAAX,EAA0B;AAC7CL,MAAAA,QAD6C;AAE7CC,MAAAA;AAF6C,KAA1B,CAAvB;AAKA,UAAMK,IAAI,GAAGT,UAAU,CAACO,IAAI,CAACG,WAAN,CAAvB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAJ,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEf,WAAW,CAACgB;AADb,KAAD,CAAR;AAIAT,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEf,WAAW,CAACiB,aADb;AAELC,MAAAA,OAAO,EAAE;AACLN,QAAAA,WAAW,EAAEH,IAAI,CAACG,WADb;AAELO,QAAAA,OAAO,EAAE,IAFJ;AAGLR,QAAAA,IAAI,EAAEA,IAAI,CAACS;AAHN;AAFJ,KAAD,CAAR;AASAC,IAAAA,YAAY,CAACC,OAAb,CACI,aADJ,EAEIC,IAAI,CAACC,SAAL,CAAehB,QAAQ,GAAGiB,IAAX,CAAgBb,WAA/B,CAFJ;AAIH,GA3BD,CA2BE,OAAOc,CAAP,EAAU;AACRnB,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEf,WAAW,CAAC2B,UADb;AAELT,MAAAA,OAAO,EAAE;AACLU,QAAAA,OAAO,EAAEF,CAAC,CAACG,QAAF,CAAWpB,IAAX,CAAgBmB,OADpB;AAELT,QAAAA,OAAO,EAAE;AAFJ;AAFJ,KAAD,CAAR;AAOAhB,IAAAA,KAAK,CAAC2B,KAAN,CAAYJ,CAAC,CAACG,QAAF,CAAWpB,IAAX,CAAgBmB,OAA5B;AACH;;AAED,SAAOL,IAAI,CAACC,SAAL,CAAehB,QAAQ,GAAGiB,IAAX,CAAgBb,WAA/B,CAAP;AACH,CAxCM;AA0CP,OAAO,MAAMmB,MAAM,GAAG,MAAM,CAACxB,QAAD,EAAWC,QAAX,KAAwB;AAChDD,EAAAA,QAAQ,CAAC;AACLQ,IAAAA,IAAI,EAAEf,WAAW,CAACgC,MADb;AAELd,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE,KADJ;AAELP,MAAAA,WAAW,EAAE;AAFR;AAFJ,GAAD,CAAR;AAQAS,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoC,EAApC;AACH,CAVM","sourcesContent":["import * as actionTypes from \"../constants/auth.constant\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const login = (username, password) => async (dispatch, getState) => {\r\n    try {\r\n        const { data } = await axios.post(\"/auth/login\", {\r\n            username,\r\n            password,\r\n        });\r\n\r\n        const user = jwt_decode(data.accessToken)\r\n\r\n        console.log(user)\r\n\r\n        dispatch({\r\n            type: actionTypes.LOGIN_REQUIRED,\r\n        });\r\n\r\n        dispatch({\r\n            type: actionTypes.LOGIN_SUCCESS,\r\n            payload: {\r\n                accessToken: data.accessToken,\r\n                isLogin: true,\r\n                user: user.customer\r\n            },\r\n        });\r\n\r\n        localStorage.setItem(\r\n            \"accessToken\",\r\n            JSON.stringify(getState().auth.accessToken)\r\n        );\r\n    } catch (e) {\r\n        dispatch({\r\n            type: actionTypes.LOGIN_FAIL,\r\n            payload: {\r\n                message: e.response.data.message,\r\n                isLogin: false\r\n            },\r\n        });\r\n        toast.error(e.response.data.message);\r\n    }\r\n\r\n    return JSON.stringify(getState().auth.accessToken);\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: actionTypes.LOGOUT,\r\n        payload: {\r\n            isLogin: false,\r\n            accessToken: \"\"\r\n        }\r\n    });\r\n\r\n    localStorage.setItem('accessToken', \"\")\r\n}\r\n"]},"metadata":{},"sourceType":"module"}