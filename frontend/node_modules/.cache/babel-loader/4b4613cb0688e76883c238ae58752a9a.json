{"ast":null,"code":"import * as actionTypes from \"../constants/auth.constant\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nexport const login = (username, password) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.post(\"/auth/login\", {\n    username,\n    password\n  });\n  axios.post(\"/auth/login\", {\n    username,\n    password\n  }).then(res => {\n    const {\n      data\n    } = res;\n\n    if (!data.message) {\n      dispatch({\n        type: actionTypes.LOGIN_REQUIRED\n      });\n      dispatch({\n        type: actionTypes.LOGIN_SUCCESS,\n        payload: {\n          accessToken: data.accessToken\n        }\n      });\n      localStorage.setItem(\"accessToken\", JSON.stringify(getState().auth.accessToken)); // localStorage.setItem(\"user\", JSON.stringify(getState().auth.user));\n    } else {\n      dispatch({\n        type: actionTypes.LOGIN_FAIL,\n        payload: {\n          message: data.message\n        }\n      });\n    }\n  });\n  return JSON.stringify(getState().auth.accessToken);\n};","map":{"version":3,"sources":["E:/Web/ReactJS/ClothesShop/frontend/src/redux/actions/auth.action.js"],"names":["actionTypes","axios","jwt_decode","login","username","password","dispatch","getState","data","post","then","res","message","type","LOGIN_REQUIRED","LOGIN_SUCCESS","payload","accessToken","localStorage","setItem","JSON","stringify","auth","LOGIN_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMP,KAAK,CAACQ,IAAN,CAAW,aAAX,EAA0B;AAC7CL,IAAAA,QAD6C;AAE7CC,IAAAA;AAF6C,GAA1B,CAAvB;AAKAJ,EAAAA,KAAK,CAACQ,IAAN,CAAW,aAAX,EAA0B;AACtBL,IAAAA,QADsB;AAEtBC,IAAAA;AAFsB,GAA1B,EAGGK,IAHH,CAGQC,GAAG,IAAI;AACX,UAAM;AAACH,MAAAA;AAAD,QAASG,GAAf;;AAEA,QAAI,CAACH,IAAI,CAACI,OAAV,EAAmB;AACfN,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEb,WAAW,CAACc;AADb,OAAD,CAAR;AAIAR,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEb,WAAW,CAACe,aADb;AAELC,QAAAA,OAAO,EAAE;AACLC,UAAAA,WAAW,EAAET,IAAI,CAACS;AADb;AAFJ,OAAD,CAAR;AAOAC,MAAAA,YAAY,CAACC,OAAb,CACI,aADJ,EAEIC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBL,WAA/B,CAFJ,EAZe,CAiBf;AACH,KAlBD,MAkBO;AACHX,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEb,WAAW,CAACuB,UADb;AAELP,QAAAA,OAAO,EAAE;AACLJ,UAAAA,OAAO,EAAEJ,IAAI,CAACI;AADT;AAFJ,OAAD,CAAR;AAMH;AACJ,GAhCD;AAoCA,SAAOQ,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBL,WAA/B,CAAP;AACH,CA3CM","sourcesContent":["import * as actionTypes from \"../constants/auth.constant\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const login = (username, password) => async (dispatch, getState) => {\r\n    const { data } = await axios.post(\"/auth/login\", {\r\n        username,\r\n        password,\r\n    });\r\n\r\n    axios.post(\"/auth/login\", {\r\n        username,\r\n        password,\r\n    }).then(res => {\r\n        const {data} = res;\r\n\r\n        if (!data.message) {\r\n            dispatch({\r\n                type: actionTypes.LOGIN_REQUIRED,\r\n            });\r\n\r\n            dispatch({\r\n                type: actionTypes.LOGIN_SUCCESS,\r\n                payload: {\r\n                    accessToken: data.accessToken,\r\n                },\r\n            });\r\n\r\n            localStorage.setItem(\r\n                \"accessToken\",\r\n                JSON.stringify(getState().auth.accessToken)\r\n            );\r\n\r\n            // localStorage.setItem(\"user\", JSON.stringify(getState().auth.user));\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.LOGIN_FAIL,\r\n                payload: {\r\n                    message: data.message,\r\n                },\r\n            });\r\n        }\r\n    });\r\n\r\n    \r\n\r\n    return JSON.stringify(getState().auth.accessToken);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}