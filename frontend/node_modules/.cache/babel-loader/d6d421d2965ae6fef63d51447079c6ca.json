{"ast":null,"code":"import * as actionTypes from \"../constants/auth.constant\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nexport const login = (username, password) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.post(\"http://localhost:5000/auth/login\", {\n    username,\n    password\n  });\n  axios.post(\"http://localhost:5000/auth/login\", {\n    username,\n    password\n  }).catch(err);\n  console.log(data);\n\n  if (!data.message) {\n    dispatch({\n      type: actionTypes.LOGIN_REQUIRED\n    });\n    dispatch({\n      type: actionTypes.LOGIN_SUCCESS,\n      payload: {\n        accessToken: data.accessToken\n      }\n    });\n    localStorage.setItem(\"accessToken\", JSON.stringify(getState().auth.accessToken)); // localStorage.setItem(\"user\", JSON.stringify(getState().auth.user));\n  } else {\n    dispatch({\n      type: actionTypes.LOGIN_FAIL,\n      payload: {\n        message: data.message\n      }\n    });\n  }\n\n  return JSON.stringify(getState().auth.accessToken);\n};","map":{"version":3,"sources":["E:/Web/ReactJS/ClothesShop/frontend/src/redux/actions/auth.action.js"],"names":["actionTypes","axios","jwt_decode","login","username","password","dispatch","getState","data","post","catch","err","console","log","message","type","LOGIN_REQUIRED","LOGIN_SUCCESS","payload","accessToken","localStorage","setItem","JSON","stringify","auth","LOGIN_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMP,KAAK,CAACQ,IAAN,CAAW,kCAAX,EAA+C;AAClEL,IAAAA,QADkE;AAElEC,IAAAA;AAFkE,GAA/C,CAAvB;AAKAJ,EAAAA,KAAK,CAACQ,IAAN,CAAW,kCAAX,EAA+C;AAC3CL,IAAAA,QAD2C;AAE3CC,IAAAA;AAF2C,GAA/C,EAGGK,KAHH,CAGSC,GAHT;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AAEA,MAAI,CAACA,IAAI,CAACM,OAAV,EAAmB;AACfR,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEf,WAAW,CAACgB;AADb,KAAD,CAAR;AAIAV,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEf,WAAW,CAACiB,aADb;AAELC,MAAAA,OAAO,EAAE;AACLC,QAAAA,WAAW,EAAEX,IAAI,CAACW;AADb;AAFJ,KAAD,CAAR;AAOAC,IAAAA,YAAY,CAACC,OAAb,CACI,aADJ,EAEIC,IAAI,CAACC,SAAL,CAAehB,QAAQ,GAAGiB,IAAX,CAAgBL,WAA/B,CAFJ,EAZe,CAiBf;AACH,GAlBD,MAkBO;AACHb,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAEf,WAAW,CAACyB,UADb;AAELP,MAAAA,OAAO,EAAE;AACLJ,QAAAA,OAAO,EAAEN,IAAI,CAACM;AADT;AAFJ,KAAD,CAAR;AAMH;;AAED,SAAOQ,IAAI,CAACC,SAAL,CAAehB,QAAQ,GAAGiB,IAAX,CAAgBL,WAA/B,CAAP;AACH,CAzCM","sourcesContent":["import * as actionTypes from \"../constants/auth.constant\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const login = (username, password) => async (dispatch, getState) => {\r\n    const { data } = await axios.post(\"http://localhost:5000/auth/login\", {\r\n        username,\r\n        password,\r\n    });\r\n\r\n    axios.post(\"http://localhost:5000/auth/login\", {\r\n        username,\r\n        password,\r\n    }).catch(err);\r\n\r\n    console.log(data)\r\n\r\n    if (!data.message) {\r\n        dispatch({\r\n            type: actionTypes.LOGIN_REQUIRED,\r\n        });\r\n\r\n        dispatch({\r\n            type: actionTypes.LOGIN_SUCCESS,\r\n            payload: {\r\n                accessToken: data.accessToken,\r\n            },\r\n        });\r\n\r\n        localStorage.setItem(\r\n            \"accessToken\",\r\n            JSON.stringify(getState().auth.accessToken)\r\n        );\r\n\r\n        // localStorage.setItem(\"user\", JSON.stringify(getState().auth.user));\r\n    } else {\r\n        dispatch({\r\n            type: actionTypes.LOGIN_FAIL,\r\n            payload: {\r\n                message: data.message,\r\n            },\r\n        });\r\n    }\r\n\r\n    return JSON.stringify(getState().auth.accessToken);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}