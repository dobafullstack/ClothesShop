{"ast":null,"code":"import * as actionTypes from \"../constants/auth.constant\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nexport const login = (username, password) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"/auth/login\", {\n      username,\n      password\n    });\n\n    if (!data.message) {\n      dispatch({\n        type: actionTypes.LOGIN_REQUIRED\n      });\n      dispatch({\n        type: actionTypes.LOGIN_SUCCESS,\n        payload: {\n          accessToken: data.accessToken\n        }\n      });\n      localStorage.setItem(\"accessToken\", JSON.stringify(getState().auth.accessToken)); // localStorage.setItem(\"user\", JSON.stringify(getState().auth.user));\n    } else {}\n  } catch (e) {\n    dispatch({\n      type: actionTypes.LOGIN_FAIL,\n      payload: {\n        message: data.message\n      }\n    });\n  }\n\n  return JSON.stringify(getState().auth.accessToken);\n};","map":{"version":3,"sources":["E:/Web/ReactJS/ClothesShop/frontend/src/redux/actions/auth.action.js"],"names":["actionTypes","axios","jwt_decode","login","username","password","dispatch","getState","data","post","message","type","LOGIN_REQUIRED","LOGIN_SUCCESS","payload","accessToken","localStorage","setItem","JSON","stringify","auth","e","LOGIN_FAIL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,MAAG;AACC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,IAAN,CAAW,aAAX,EAA0B;AAC7CL,MAAAA,QAD6C;AAE7CC,MAAAA;AAF6C,KAA1B,CAAvB;;AAKA,QAAI,CAACG,IAAI,CAACE,OAAV,EAAmB;AACfJ,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEX,WAAW,CAACY;AADb,OAAD,CAAR;AAIAN,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEX,WAAW,CAACa,aADb;AAELC,QAAAA,OAAO,EAAE;AACLC,UAAAA,WAAW,EAAEP,IAAI,CAACO;AADb;AAFJ,OAAD,CAAR;AAOAC,MAAAA,YAAY,CAACC,OAAb,CACI,aADJ,EAEIC,IAAI,CAACC,SAAL,CAAeZ,QAAQ,GAAGa,IAAX,CAAgBL,WAA/B,CAFJ,EAZe,CAiBf;AACH,KAlBD,MAkBO,CAEN;AACJ,GA3BD,CA2BC,OAAMM,CAAN,EAAQ;AACLf,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEX,WAAW,CAACsB,UADb;AAELR,MAAAA,OAAO,EAAE;AACLJ,QAAAA,OAAO,EAAEF,IAAI,CAACE;AADT;AAFJ,KAAD,CAAR;AAMH;;AAED,SAAOQ,IAAI,CAACC,SAAL,CAAeZ,QAAQ,GAAGa,IAAX,CAAgBL,WAA/B,CAAP;AACH,CAtCM","sourcesContent":["import * as actionTypes from \"../constants/auth.constant\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const login = (username, password) => async (dispatch, getState) => {\r\n    try{\r\n        const { data } = await axios.post(\"/auth/login\", {\r\n            username,\r\n            password,\r\n        });\r\n\r\n        if (!data.message) {\r\n            dispatch({\r\n                type: actionTypes.LOGIN_REQUIRED,\r\n            });\r\n\r\n            dispatch({\r\n                type: actionTypes.LOGIN_SUCCESS,\r\n                payload: {\r\n                    accessToken: data.accessToken,\r\n                },\r\n            });\r\n\r\n            localStorage.setItem(\r\n                \"accessToken\",\r\n                JSON.stringify(getState().auth.accessToken)\r\n            );\r\n\r\n            // localStorage.setItem(\"user\", JSON.stringify(getState().auth.user));\r\n        } else {\r\n            \r\n        }\r\n    }catch(e){\r\n        dispatch({\r\n            type: actionTypes.LOGIN_FAIL,\r\n            payload: {\r\n                message: data.message,\r\n            },\r\n        });\r\n    }\r\n\r\n    return JSON.stringify(getState().auth.accessToken);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}