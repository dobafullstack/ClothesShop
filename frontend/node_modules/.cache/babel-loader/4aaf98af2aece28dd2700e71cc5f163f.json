{"ast":null,"code":"import * as actionTypes from \"../constants/auth.constant\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nexport const login = (username, password) => async (dispatch, getState) => {\n  axios.post(\"/auth/login\", {\n    username,\n    password\n  }).then(res => {\n    const {\n      data\n    } = res;\n\n    if (!data.message) {\n      dispatch({\n        type: actionTypes.LOGIN_REQUIRED\n      });\n      dispatch({\n        type: actionTypes.LOGIN_SUCCESS,\n        payload: {\n          accessToken: data.accessToken\n        }\n      });\n      localStorage.setItem(\"accessToken\", JSON.stringify(getState().auth.accessToken)); // localStorage.setItem(\"user\", JSON.stringify(getState().auth.user));\n    }\n  }).catch(err => {\n    dispatch({\n      type: actionTypes.LOGIN_FAIL,\n      payload: {\n        message: err.response\n      }\n    });\n  });\n  return JSON.stringify(getState().auth.accessToken);\n};","map":{"version":3,"sources":["E:/Web/ReactJS/ClothesShop/frontend/src/redux/actions/auth.action.js"],"names":["actionTypes","axios","jwt_decode","login","username","password","dispatch","getState","post","then","res","data","message","type","LOGIN_REQUIRED","LOGIN_SUCCESS","payload","accessToken","localStorage","setItem","JSON","stringify","auth","catch","err","LOGIN_FAIL","response"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvEN,EAAAA,KAAK,CACAO,IADL,CACU,aADV,EACyB;AACjBJ,IAAAA,QADiB;AAEjBC,IAAAA;AAFiB,GADzB,EAKKI,IALL,CAKWC,GAAD,IAAS;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAWD,GAAjB;;AAEA,QAAI,CAACC,IAAI,CAACC,OAAV,EAAmB;AACfN,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEb,WAAW,CAACc;AADb,OAAD,CAAR;AAIAR,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEb,WAAW,CAACe,aADb;AAELC,QAAAA,OAAO,EAAE;AACLC,UAAAA,WAAW,EAAEN,IAAI,CAACM;AADb;AAFJ,OAAD,CAAR;AAOAC,MAAAA,YAAY,CAACC,OAAb,CACI,aADJ,EAEIC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBL,WAA/B,CAFJ,EAZe,CAiBf;AACH;AACJ,GA3BL,EA2BOM,KA3BP,CA2BaC,GAAG,IAAI;AACZlB,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEb,WAAW,CAACyB,UADb;AAELT,MAAAA,OAAO,EAAE;AACLJ,QAAAA,OAAO,EAAEY,GAAG,CAACE;AADR;AAFJ,KAAD,CAAR;AAMH,GAlCL;AAoCA,SAAON,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBL,WAA/B,CAAP;AACH,CAtCM","sourcesContent":["import * as actionTypes from \"../constants/auth.constant\";\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const login = (username, password) => async (dispatch, getState) => {\r\n    axios\r\n        .post(\"/auth/login\", {\r\n            username,\r\n            password,\r\n        })\r\n        .then((res) => {\r\n            const { data } = res;\r\n\r\n            if (!data.message) {\r\n                dispatch({\r\n                    type: actionTypes.LOGIN_REQUIRED,\r\n                });\r\n\r\n                dispatch({\r\n                    type: actionTypes.LOGIN_SUCCESS,\r\n                    payload: {\r\n                        accessToken: data.accessToken,\r\n                    },\r\n                });\r\n\r\n                localStorage.setItem(\r\n                    \"accessToken\",\r\n                    JSON.stringify(getState().auth.accessToken)\r\n                );\r\n\r\n                // localStorage.setItem(\"user\", JSON.stringify(getState().auth.user));\r\n            }\r\n        }).catch(err => {\r\n            dispatch({\r\n                type: actionTypes.LOGIN_FAIL,\r\n                payload: {\r\n                    message: err.response,\r\n                },\r\n            });\r\n        });\r\n\r\n    return JSON.stringify(getState().auth.accessToken);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}